@startuml architecture_diagram
skinparam componentStyle rectangle
skinparam linetype ortho

'===========================
' Layer 1: Presentation
'===========================
package "Presentation Layer" {
  [Streamlit UI] as UI
  [pages/data_manager.py] as DM
  [pages/advanced_settings.py] as AS
  [pages/timetable_viewer.py] as TV
}

'===========================
' Layer 2: Service / Business Logic
'===========================
package "Service Layer" {
  [ConfigManager] as CM   <<singleton>>
  [ErrorHandler]          <<utility>>
}

package "Business Logic Layer" {
  component [CPSatScheduler] as CPS
  component [EnhancedGeneticOptimizer] as GA
  component [SoftConstraintsOptimizer] as SA
  component [SoftConstraintsValidator] as SCV
}

'===========================
' Layer 3: Data / Models
'===========================
package "Data Layer" {
  [model.py] as MODELS
  [JSON I/O] as JSON
}

'===========================
' Layer 4: External Libraries
'===========================
package "External Libraries" {
  [Google OR-Tools] as ORTOOLS
  [pandas] as PD
  [plotly] as PLY
}

'===========================
' Relations
'===========================
UI  --> CM        : get_config()
UI  --> CPS       : generate_schedule()
UI  --> GA        : evolve()
UI  --> SA        : optimize()
UI  --> JSON      : load / save

CM  --> MODELS    : Config dataclass
CPS --> ORTOOLS   : cp_model.CpModel()
GA  --> SCV       : validate fitness
SA  --> SCV       : validate fitness
MODELS --> JSON   : serialization

@enduml
